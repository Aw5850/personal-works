"use strict";

var _ = require("lodash");

var fmt = function fmt(x) {
  return JSON.stringify(x);
};

exports.string = function (x, comment) {
  if (!_.isString(x)) {
    throw new Error("expects string but got " + fmt(x) + " at " + comment);
    return;
  }
};

exports.array = function (x, comment) {
  if (!_.isArray(x)) {
    throw new Error("expects array but got " + fmt(x) + " at " + comment);
    return;
  }
};

exports.func = function (x, comment) {
  if (!_.isFunction(x)) {
    throw new Error("expects function but got " + fmt(x) + " at " + comment);
    return;
  }
};

exports.oneOf = function (x, xs, comment) {
  if (!(xs.indexOf(x) >= 0)) {
    throw new Error(fmt(x) + " is not oneOf " + fmt(xs) + " at " + comment);
    return;
  }
};

exports.result = function (x, comment) {
  if (!x) {
    throw new Error("expects true but got " + fmt(x) + " at " + comment);
    return;
  }
};

exports.defined = function (x, comment) {
  if (!(x != null)) {
    throw new Error("value not defined at " + comment);
    return;
  }
};